name: Lyric Bot

on:
  schedule:
    - cron: '0 */3 * * *'  # Runs every 3 hours
  workflow_dispatch:  # Allows manual trigger

jobs:
  run-lyric-bot:
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ✅ Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # ✅ Step 3: Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ✅ Step 4: Set up Environment Variables
      - name: Set up Environment Variables
        env:
          API_KEY: ${{ secrets.API_KEY }}
          API_SECRET: ${{ secrets.API_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
          LASTFM_API_KEY: ${{ secrets.LASTFM_API_KEY }}
        run: |
          echo "API_KEY=${API_KEY}" >> .env
          echo "API_SECRET=${API_SECRET}" >> .env
          echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> .env
          echo "ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}" >> .env
          echo "BEARER_TOKEN=${BEARER_TOKEN}" >> .env
          echo "LASTFM_API_KEY=${LASTFM_API_KEY}" >> .env

      # ✅ Step 5: Run Lyric Bot
      - name: Run Lyric Bot
        run: python lyrics_bot.py

      # ✅ Step 6: Upload Generated Image (Optional, for Debugging)
      - name: Upload Lyric Image
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lyric_image
          path: lyric_image.png
